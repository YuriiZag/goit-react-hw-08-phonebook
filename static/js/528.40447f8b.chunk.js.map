{"version":3,"file":"static/js/528.40447f8b.chunk.js","mappings":"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","sources":["components/contacts/contacts.styled.jsx","components/filter.jsx","redux/phonebook/selectors.js","components/contacts/contacts.jsx","components/modal/modal.styled.jsx","components/modal/modal.jsx","components/newContactForm/newContactForm.styled.jsx","components/newContactForm/newContactForm.jsx","pages/phonebook/phonebook.styled.jsx","pages/phonebook/phonebook.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: ${p => p.theme.colors.white};\n  text-shadow: 3px 3px 3px rgba(0, 0, 0, 0.5);\n`;\n\nexport const FilterField = styled.input`\n  width: 150px;\n  font-weight: 500;\n  font-size: ${p => p.theme.fontSizes.xs}px;\n  background-color: transparent;\n  border-top: none;\n  border-right: none;\n  border-left: none;\n  border-bottom: 2px solid black;\n  :hover,\n  :focus {\n    border-color: ${p => p.theme.colors.red};\n    outline: none;\n  }\n`;\n\nexport const DeleteButton = styled.button`\n  border: none;\n  color: white;\n  display: block;\n  background-color: ${p => p.theme.colors.headerBackground};\n  border-radius: ${p => p.theme.radii.normal}px;\n  :hover,\n  :focus {\n    text-decoration: underline 1px;\n    scale: 105%;\n    box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.3);\n  }\n`;\nexport const ContactList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 19px;\n`;\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  width: 300px;\n`\nexport const ContactName = styled.span`\n  font-weight: 500;\n`;\nexport const ContactNumber = styled.span`\n  margin-left: 10px;\n`;\n","import React from 'react';\n\nimport { FilterField, FilterLabel } from './contacts/contacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { update } from 'redux/phonebook/filterSlice';\n\nexport const Filter = () => {\n  const filterValue = useSelector(state => state.filter.value);\n  const dispatch = useDispatch();\n\n  const onFilterChange = e => {\n    dispatch(update(e.currentTarget.value));\n  };\n\n  return (\n    <div>\n      <form autoComplete=\"off\">\n        <FilterLabel htmlFor=\"filter\">\n          Find contacts by name\n          <FilterField\n            type=\"text\"\n            name=\"filter\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            onChange={onFilterChange}\n            value={filterValue}\n            required\n          />\n        </FilterLabel>\n      </form>\n    </div>\n  );\n};\n","\n\nexport const getContactsList = state => state.contacts;\n\n\n\nexport const getFilterRequest = state => state.filter.value;\n","import { Filter } from '../filter';\nimport {\n  DeleteButton,\n  ContactList,\n  ContactName,\n  ContactNumber,\n  ContactItem,\n} from './contacts.styled';\nimport { getContactsList, getFilterRequest } from 'redux/phonebook/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts, deleteContacts } from 'redux/phonebook/operations';\nimport axios from 'axios';\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n  const { contactsList, isLoading, error } = useSelector(getContactsList);\n  const filterRequest = useSelector(getFilterRequest);\n\n  const contactsFilter = () => {\n    const normalizedFilter = filterRequest.toLowerCase();\n    return contactsList.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  useEffect(() => {\n    console.log(axios.defaults.headers.common.Authorization);\n    if (axios.defaults.headers.common.Authorization) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch]);\n\n  const onDelete = e => {\n    dispatch(deleteContacts(e.currentTarget.value));\n  };\n\n  const contacts = contactsFilter();\n  return (\n    <>\n      <Filter></Filter>\n      {isLoading && <p>Loading...</p>}\n      {error !== null && <p>{error}</p>}\n      {!isLoading && (\n        <ContactList>\n          {contacts.map(({ name, number, id }) => {\n            return (\n              <ContactItem key={id}>\n                <ContactName>{name}:</ContactName>\n                <ContactNumber>{number}</ContactNumber>\n                <DeleteButton type=\"button\" value={id} onClick={onDelete}>\n                  delete\n                </DeleteButton>\n              </ContactItem>\n            );\n          })}\n        </ContactList>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const Modal = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: ${p => p.theme.space[5]}px ${p => p.theme.space[6]}px\n    ${p => p.theme.space[5]}px ${p => p.theme.space[6]}px;\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n  background-color: ${p => p.theme.colors.darkBackground};\n`;\n","import { Backdrop, Modal } from './modal.styled';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modalroot');\n\nexport const ModalWindow = ({ children, toggleModal }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        toggleModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  const onClickHandle = e => {\n    if (e.target.children.length === 1) {\n      toggleModal();\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={onClickHandle}>\n      <Modal>{children}</Modal>\n    </Backdrop>,\n    modalRoot\n  );\n};\n","import styled from \"styled-components\";\n\n\nexport const Header = styled.p`\n  margin: 0px 0 30px 0;\n  font-size: 32px;\n  font-weight: 700;\n  color: ${p => p.theme.colors.white};\n  text-shadow: 3px 3px 3px rgba(0, 0, 0, 0.5);\n`;\nexport const PhonebookForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    width: 200px;\n    gap: 30px;\n    align-items: center;\n    justify-content: center;\n`\nexport const Label = styled.label`\n    font-weight: 500;\n    font-size: 20px;\n    \n`\n\nexport const TypingField = styled.input`\n  font-weight: 500;\n  font-size: ${p => p.theme.fontSizes.xs}px;\n  background-color: transparent;\n  border-top: none;\n  border-right: none;\n  border-left: none;\n  :hover,\n  :focus {\n    border-color: ${p => p.theme.colors.red};\n    outline: none;\n  }\n`; \nexport const SubmitButton = styled.button`\n  width: 150px;\n  border: none;\n  color: white;\n  display: block;\n  font-weight: 500;\n  font-size: ${p => p.theme.fontSizes.xs}px;\n  background-color: ${p => p.theme.colors.headerBackground};\n  border-radius: ${p => p.theme.radii.normal}px;\n  :hover,\n  :focus {\n    text-decoration: underline 1px;\n    scale: 105%;\n    box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.3);\n  }\n`;","import { getContactsList } from 'redux/phonebook/selectors';\nimport {\n  Header,\n  PhonebookForm,\n  TypingField,\n  Label,\n  SubmitButton,\n} from './newContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/phonebook/operations';\n\nexport const NewContactForm = () => {\n  const contactsList = useSelector(getContactsList);\n  const dispatch = useDispatch();\n\n  const onSubmitHandler = evt => {\n    evt.preventDefault();\n    const { name, number } = evt.currentTarget.elements;\n    if (contactsList.length > 0) {\n      const nameList = contactsList.map(contact => contact.name.toLowerCase());\n      console.log(nameList);\n      if (!nameList.includes(name.value.toLowerCase())) {\n        dispatch(\n          addContacts({\n            name: name.value,\n            number: number.value,\n          })\n        );\n      } else {\n        window.alert(`${name.value} is already in list.`);\n      }\n    } else {\n      dispatch(\n        addContacts({\n          name: name.value,\n          number: number.value,\n        })\n      );\n    }\n    evt.currentTarget.reset();\n  };\n\n  return (\n    <>\n      <Header>Phonebook</Header>\n      <PhonebookForm autoComplete=\"off\" onSubmit={onSubmitHandler}>\n        <Label htmlFor=\"name\">\n          Name:\n          <TypingField\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label htmlFor=\"number\">\n          Phone number:\n          <TypingField name=\"number\" type=\"tel\" required></TypingField>\n        </Label>\n        <SubmitButton type=\"submit\">Add contact</SubmitButton>\n      </PhonebookForm>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 90%;\n  background-image: repeating-linear-gradient(\n    to bottom,\n    ${p => p.theme.colors.lightBackground},\n    ${p => p.theme.colors.lightBackground} 20px,\n    ${p => p.theme.colors.darkBackground} 20px,\n    ${p => p.theme.colors.darkBackground} 40px\n  ); ;\n`;\nexport const Header = styled.p`\n  margin: 5px 0 30px 0;\n  font-size: ${p => p.theme.fontSizes.l}px;\n  font-weight: 700;\n  color: ${p => p.theme.colors.white};\n  text-shadow: 3px 3px 3px rgba(0, 0, 0, 0.5);\n`;\n\nexport const AddButton = styled.button`\n  margin-bottom: 20px;\n  width: 150px;\n  height: 40px;\n  border: none;\n  color: white;\n  display: block;\n  font-weight: 500;\n  font-size: ${p => p.theme.fontSizes.xs}px;\n  background-color: ${p => p.theme.colors.headerBackground};\n  border-radius: ${p => p.theme.radii.normal}px;\n  :hover,\n  :focus {\n    text-decoration: underline 1px;\n    scale: 105%;\n    box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.3);\n  }\n`;\n","import { Contacts } from 'components/contacts/contacts';\nimport { ModalWindow } from 'components/modal/modal';\nimport { NewContactForm } from 'components/newContactForm/newContactForm';\nimport { useState } from 'react';\nimport { AddButton, Container, Header } from './phonebook.styled';\n\nconst Phonebook = () => {\n  const [modalOpenState, setModalOpenState] = useState(false);\n\n  const handleClick = e => {\n    setModalOpenState(!modalOpenState);\n  };\n\n  return (\n    <Container>\n      <Header>Your contacts</Header>\n      <AddButton onClick={handleClick}>Add contact</AddButton>\n      {modalOpenState && (\n        <ModalWindow toggleModal={handleClick}>\n          <NewContactForm></NewContactForm>\n        </ModalWindow>\n      )}\n      <Contacts></Contacts>\n    </Container>\n  );\n};\n\nexport default Phonebook;\n"],"names":["FilterLabel","styled","p","theme","colors","white","FilterField","fontSizes","xs","red","DeleteButton","headerBackground","radii","normal","ContactList","ContactItem","ContactName","ContactNumber","Filter","filterValue","useSelector","state","filter","value","dispatch","useDispatch","autoComplete","htmlFor","type","name","pattern","title","onChange","e","update","currentTarget","required","getContactsList","contacts","getFilterRequest","Contacts","contactsList","isLoading","error","filterRequest","useEffect","console","log","axios","fetchContacts","onDelete","deleteContacts","normalizedFilter","toLowerCase","contact","includes","contactsFilter","map","number","id","onClick","Backdrop","Modal","space","darkBackground","modalRoot","document","querySelector","ModalWindow","children","toggleModal","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","target","length","Header","PhonebookForm","Label","TypingField","SubmitButton","NewContactForm","onSubmit","evt","preventDefault","elements","nameList","alert","addContacts","reset","Container","lightBackground","l","AddButton","useState","modalOpenState","setModalOpenState","handleClick"],"sourceRoot":""}