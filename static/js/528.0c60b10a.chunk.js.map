{"version":3,"file":"static/js/528.0c60b10a.chunk.js","mappings":"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","sources":["components/contacts/contacts.styled.jsx","components/filter.jsx","redux/phonebook/selectors.js","components/contacts/contacts.jsx","components/modal/modal.styled.jsx","components/modal/modal.jsx","components/newContactForm/newContactForm.styled.jsx","components/newContactForm/newContactForm.jsx","pages/phonebook/phonebook.styled.jsx","pages/phonebook/phonebook.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\n\n\n\nexport const FilterField = styled.input`\n  display: block;\n  padding: 5px;\n  margin-top: 10px;\n  border: 1px solid black;\n  border-radius: 4px;\n  width: 150px;\n  outline: none;\n  :focus {\n    border: 1px solid red;\n  }\n` \nexport const DeleteButton = styled.button`\n  margin-left: 20px;\n  border-radius: 4px;\n  border: 1px solid black;\n  :hover,\n  :focus {\n    background-color: red;\n    outline: none;\n    border-radius: 4px;\n    border: 1px solid black;\n  }\n`\nexport const ContactList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n`\nexport const ContactName = styled.span`\n    font-weight: 500;\n`\nexport const ContactNumber = styled.span`\n    margin-left: 10px;\n`","import React from 'react';\n\nimport { FilterField } from './contacts/contacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { update } from 'redux/phonebook/filterSlice';\n\nexport const Filter = () => {\n  const filterValue = useSelector(state => state.filter.value);\n  const dispatch = useDispatch();\n\n  const onFilterChange = e => {\n    dispatch(update(e.currentTarget.value));\n  };\n\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <form autoComplete=\"off\">\n        <label htmlFor=\"filter\">\n          <FilterField\n            type=\"text\"\n            name=\"filter\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            onChange={onFilterChange}\n            value={filterValue}\n            required\n          />\n        </label>\n      </form>\n    </div>\n  );\n};\n","\n\nexport const getContactsList = state => state.contacts;\n\n\n\nexport const getFilterRequest = state => state.filter.value;\n","import { Filter } from '../filter';\nimport {\n  DeleteButton,\n  ContactList,\n  ContactName,\n  ContactNumber,\n} from './contacts.styled';\nimport { getContactsList, getFilterRequest } from 'redux/phonebook/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts, deleteContacts } from 'redux/phonebook/operations';\nimport axios from 'axios';\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n  const { contactsList, isLoading, error } = useSelector(getContactsList);\n  const filterRequest = useSelector(getFilterRequest);\n\n  const contactsFilter = () => {\n    const normalizedFilter = filterRequest.toLowerCase();\n    return contactsList.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  useEffect(() => {\n    console.log(axios.defaults.headers.common.Authorization);\n    if (axios.defaults.headers.common.Authorization) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch]);\n\n  const onDelete = e => {\n    dispatch(deleteContacts(e.currentTarget.value));\n  };\n\n  const contacts = contactsFilter();\n  return (\n    <>\n      <Filter></Filter>\n      {isLoading && <p>Loading...</p>}\n      {error !== null && <p>{error}</p>}\n      {!isLoading && (\n        <ContactList>\n          {contacts.map(({ name, number, id }) => {\n            return (\n              <li key={id}>\n                <ContactName>{name}</ContactName>:\n                <ContactNumber>{number}</ContactNumber>\n                <DeleteButton type=\"button\" value={id} onClick={onDelete}>\n                  delete\n                </DeleteButton>\n              </li>\n            );\n          })}\n        </ContactList>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const Modal = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: ${p => p.theme.space[5]}px;\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n  background-color: ${p => p.theme.colors.white};\n`;\n","import { Backdrop, Modal } from './modal.styled';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modalroot');\n\nexport const ModalWindow = ({ children, toggleModal }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        toggleModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  const onClickHandle = e => {\n    if (e.target.children.length === 1) {\n      toggleModal();\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={onClickHandle}>\n      <Modal>{children}</Modal>\n    </Backdrop>,\n    modalRoot\n  );\n};\n","import styled from \"styled-components\";\n\n\nexport const Header = styled.p`\n    margin: 5px 0 10px 0;\n    font-size: 32px;\n    font-weight: 700;\n`\nexport const PhonebookForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    width: 200px;\n    gap: 30px;\n    padding: 40px;\n    align-items: center;\n    justify-content: center;\n`\nexport const Label = styled.label`\n    font-weight: 500;\n    font-size: 20px;\n`\n\nexport const TypingField = styled.input`\n    display: block;\n    padding: 5px;\n    margin-top: 10px;\n    border: 1px solid black;\n    border-radius: 4px;\n    width: 150px;\n    outline: none;\n    :focus{\n        border: 1px solid red;\n    }\n` \nexport const SubmitButton = styled.button`\n    width: 150px;\n    :focus, :hover{\n        background-color: navy;\n        color: white;\n    }\n`","import { getContactsList } from 'redux/phonebook/selectors';\nimport {\n  Header,\n  PhonebookForm,\n  TypingField,\n  Label,\n  SubmitButton,\n} from './newContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/phonebook/operations';\n\nexport const NewContactForm = () => {\n  const contactsList = useSelector(getContactsList);\n  const dispatch = useDispatch();\n\n  const onSubmitHandler = evt => {\n    evt.preventDefault();\n    const { name, number } = evt.currentTarget.elements;\n    if (contactsList.length > 0) {\n      const nameList = contactsList.map(contact => contact.name.toLowerCase());\n      console.log(nameList);\n      if (!nameList.includes(name.value.toLowerCase())) {\n        dispatch(\n          addContacts({\n            name: name.value,\n            number: number.value,\n          })\n        );\n      } else {\n        window.alert(`${name.value} is already in list.`);\n      }\n    } else {\n      dispatch(\n        addContacts({\n          name: name.value,\n          number: number.value,\n        })\n      );\n    }\n    evt.currentTarget.reset();\n  };\n\n  return (\n    <>\n      <Header>Phonebook</Header>\n      <PhonebookForm autoComplete=\"off\" onSubmit={onSubmitHandler}>\n        <Label htmlFor=\"name\">\n          Name\n          <TypingField\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label htmlFor=\"number\">\n          Number\n          <TypingField name=\"number\" type=\"tel\" required></TypingField>\n        </Label>\n        <SubmitButton type=\"submit\">Add contact</SubmitButton>\n      </PhonebookForm>\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-top: 40px;\n`\nexport const Header = styled.p`\n  margin: 5px 0 10px 0;\n  font-size: 32px;\n  font-weight: 700;\n`;\n\nexport const AddButton = styled.button`\n    width: 150px;\n    height: 30px;\n    \n`","import { Contacts } from 'components/contacts/contacts';\nimport { ModalWindow } from 'components/modal/modal';\nimport { NewContactForm } from 'components/newContactForm/newContactForm';\nimport { useState } from 'react';\nimport { AddButton, Container, Header } from './phonebook.styled';\n\nconst Phonebook = () => {\n  const [modalOpenState, setModalOpenState] = useState(false);\n\n  const handleClick = e => {\n    setModalOpenState(!modalOpenState);\n  };\n\n  return (\n    <Container>\n      <Header>Your contacts</Header>\n      <AddButton onClick={handleClick}>Add contact</AddButton>\n      {modalOpenState && (\n        <ModalWindow toggleModal={handleClick}>\n          <NewContactForm></NewContactForm>\n        </ModalWindow>\n      )}\n      <Contacts></Contacts>\n    </Container>\n  );\n};\n\nexport default Phonebook;\n"],"names":["FilterField","styled","DeleteButton","ContactList","ContactName","ContactNumber","Filter","filterValue","useSelector","state","filter","value","dispatch","useDispatch","autoComplete","htmlFor","type","name","pattern","title","onChange","e","update","currentTarget","required","getContactsList","contacts","getFilterRequest","Contacts","contactsList","isLoading","error","filterRequest","useEffect","console","log","axios","fetchContacts","onDelete","deleteContacts","normalizedFilter","toLowerCase","contact","includes","contactsFilter","map","number","id","onClick","Backdrop","Modal","p","theme","space","colors","white","modalRoot","document","querySelector","ModalWindow","children","toggleModal","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","target","length","Header","PhonebookForm","Label","TypingField","SubmitButton","NewContactForm","onSubmit","evt","preventDefault","elements","nameList","alert","addContacts","reset","Container","AddButton","useState","modalOpenState","setModalOpenState","handleClick"],"sourceRoot":""}